; 1. Se da un arbore de tipul (1). Sa se afiseze calea de la radacina pana la un nod x dat.

(defun parcurg_st (arb nv nm)
    (cond
        ((null arb) nil)
        ((= nv (+ 1 nm)) nil)
        (t (cons (car arb) (cons (cadr arb) (parcurg_st (cddr arb) (+ 1 nv) (+ (cadr arb) nm)))))
    )
)

(defun stang (arb)
    (cond
        ((atom arb) nil)
        (t (parcurg_st (cddr arb) 0 0))
    )
)

(defun parcurg_dr (arb nv nm)
    (cond
        ((null arb) nil)
        ((= nv (+ 1 nm)) arb)
        (t (parcurg_dr (cddr arb) (+ 1 nv) (+ (cadr arb) nm)))
    )
)

(defun drept (arb)
    (cond
        ((atom arb) nil)
        (t (parcurg_dr (cddr arb) 0 0))
    )
)

(defun apare (arb x)
    (cond
        ((null arb) nil)
        ((eq arb x) t)
        ((eq (car arb) x) t)
        (t (or (apare (stang arb) x) (apare (drept arb) x)))
    )
)

(defun parcurgere (arb x)
    (cond
        ((not (apare arb x)) nil)
        ((eq (car arb) x) (list x))
        ((apare (stang arb) x) (cons (car arb) (parcurgere (stang arb) x)))
        (t (cons (car arb) (parcurgere (drept arb) x)))
    )
)

(print (parcurgere '(A 2 B 0 C 2 D 0 E 0) 'A))